// <auto-generated />
using GameProjects.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameProjects.Migrations
{
    [DbContext(typeof(GameProjectsContext))]
    [Migration("20250504233239_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperGame", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("DeveloperGame");
                });

            modelBuilder.Entity("GameProjects.Model.Contribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContributionDate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContributionDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContributionType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("GameId");

                    b.ToTable("Contribution");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContributionDate = "7/17/2024",
                            ContributionDescription = "Design Doc",
                            ContributionType = "Design",
                            DeveloperId = 1,
                            GameId = 4,
                            Role = ""
                        },
                        new
                        {
                            Id = 2,
                            ContributionDate = "7/17/2024",
                            ContributionDescription = "Title Logo",
                            ContributionType = "Art",
                            DeveloperId = 2,
                            GameId = 4,
                            Role = ""
                        },
                        new
                        {
                            Id = 3,
                            ContributionDate = "7/25/2024",
                            ContributionDescription = "Menu Theme",
                            ContributionType = "Music",
                            DeveloperId = 1,
                            GameId = 4,
                            Role = ""
                        });
                });

            modelBuilder.Entity("GameProjects.Model.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Developer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "perry128@mail.nmc.edu",
                            Name = "Jack Perry"
                        },
                        new
                        {
                            Id = 2,
                            Email = "",
                            Name = "Aries"
                        });
                });

            modelBuilder.Entity("GameProjects.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Engine")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Genre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Platform")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Progress")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Version")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Engine = "",
                            Genre = "Arcade",
                            Platform = "Browser",
                            Progress = 2,
                            Title = "Twin Snakes",
                            Version = "0.1"
                        },
                        new
                        {
                            Id = 2,
                            Engine = "",
                            Genre = "Arcade",
                            Platform = "Browser",
                            Progress = 2,
                            Title = "Paddles",
                            Version = "0.1"
                        },
                        new
                        {
                            Id = 3,
                            Engine = "",
                            Genre = "Arcade",
                            Platform = "Browser",
                            Progress = 2,
                            Title = "Tag",
                            Version = "0.1"
                        },
                        new
                        {
                            Id = 4,
                            Engine = "",
                            Genre = "Action Platformer",
                            Platform = "PC",
                            Progress = 1,
                            Title = "Phantom's Prey",
                            Version = "pre-alpha"
                        });
                });

            modelBuilder.Entity("DeveloperGame", b =>
                {
                    b.HasOne("GameProjects.Model.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameProjects.Model.Game", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameProjects.Model.Contribution", b =>
                {
                    b.HasOne("GameProjects.Model.Developer", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameProjects.Model.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Developer");

                    b.Navigation("Game");
                });
#pragma warning restore 612, 618
        }
    }
}
